{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\src\\\\components\\\\EditLogoScreen.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateLogo(\\n        $id: String!,\\n        $text: String!,\\n        $color: String!,\\n        $fontSize: Int!,\\n        $backgroundColor:String!,\\n        $borderColor:String!,\\n        $borderRadius:Int!,\\n        $borderWidth:Int!,\\n        $padding:Int!,\\n        $margin:Int!) {\\n            updateLogo(\\n                id: $id,\\n                text: $text,\\n                color: $color,\\n                fontSize: $fontSize,\\n                backgroundColor:$backgroundColor,\\n                borderColor:$borderColor,\\n                borderRadius:$borderRadius,\\n                borderWidth:$borderWidth,\\n                padding:$padding,\\n                margin:$margin) {\\n                    lastUpdate\\n                }\\n        }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query logo($logoId: String) {\\n        logo(id: $logoId) {\\n            _id\\n            text\\n            color\\n            fontSize\\n            backgroundColor\\n            borderColor\\n            borderRadius\\n            borderWidth\\n            padding\\n            margin\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\nvar GET_LOGO = gql(_templateObject());\nvar UPDATE_LOGO = gql(_templateObject2());\n\nvar EditLogoScreen = /*#__PURE__*/function (_Component) {\n  _inherits(EditLogoScreen, _Component);\n\n  function EditLogoScreen() {\n    var _this;\n\n    _classCallCheck(this, EditLogoScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditLogoScreen).call(this)); // WE'LL MANAGE THE UI CONTROL\n    // VALUES HERE\n\n    _this.handleTextChange = function (event) {\n      console.log(\"text change\");\n\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.state = {\n      setup: true,\n      text: \"\",\n      color: \"\",\n      fontSize: 0,\n      backgroundColor: \"\",\n      borderColor: \"\",\n      borderRadius: 0,\n      borderWidth: 0,\n      padding: 0,\n      margin: 0\n    };\n    return _this;\n  }\n\n  _createClass(EditLogoScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var text, color, fontSize, backgroundColor, borderColor, borderRadius, borderWidth, padding, margin;\n      var style = {};\n      return /*#__PURE__*/React.createElement(Query, {\n        query: GET_LOGO,\n        variables: {\n          logoId: this.props.match.params.id\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return 'Loading...';\n        if (error) return \"Error! \".concat(error.message);\n        style = {\n          borderStyle: \"solid\",\n          color: data.logo.color,\n          fontSize: data.logo.fontSize + \"pt\",\n          backgroundColor: data.logo.backgroundColor,\n          borderColor: data.logo.borderColor,\n          borderRadius: data.logo.borderRadius + \"pt\",\n          borderWidth: data.logo.borderWidth + \"pt\",\n          padding: data.logo.padding + \"pt\",\n          margin: data.logo.margin + \"pt\"\n        };\n        return /*#__PURE__*/React.createElement(Mutation, {\n          mutation: UPDATE_LOGO,\n          key: data.logo._id,\n          onCompleted: function onCompleted() {\n            return _this2.props.history.push(\"/\");\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }\n        }, function (updateLogo, _ref2) {\n          var loading = _ref2.loading,\n              error = _ref2.error;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"container\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"panel panel-default\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"panel-heading\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"h4\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: \"/\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 49\n            }\n          }, \"Home\")), /*#__PURE__*/React.createElement(\"h3\", {\n            className: \"panel-title\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 45\n            }\n          }, \"Edit Logo\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"panel-body\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"form\", {\n            onSubmit: function onSubmit(e) {\n              e.preventDefault();\n              updateLogo({\n                variables: {\n                  id: data.logo._id,\n                  text: text.value,\n                  color: color.value,\n                  fontSize: parseInt(fontSize.value),\n                  backgroundColor: backgroundColor.value,\n                  borderColor: borderColor.value,\n                  borderRadius: parseInt(borderRadius.value),\n                  borderWidth: parseInt(borderWidth.value),\n                  padding: parseInt(padding.value),\n                  margin: parseInt(margin.value)\n                }\n              });\n              text.value = \"\";\n              color.value = \"\";\n              fontSize.value = \"\";\n              backgroundColor.value = \"\";\n              borderColor.value = \"\";\n              borderRadius.value = \"\";\n              borderWidth.value = \"\";\n              padding.value = \"\";\n              margin.value = \"\";\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"text\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 57\n            }\n          }, \"Text:\"), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"text\",\n            ref: function ref(node) {\n              text = node;\n            },\n            placeholder: \"Text\",\n            onChange: _this2.handleTextChange,\n            defaultValue: data.logo.text,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 57\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"color\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 57\n            }\n          }, \"Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"color\",\n            className: \"form-control\",\n            name: \"color\",\n            ref: function ref(node) {\n              color = node;\n            },\n            placeholder: \"Color\",\n            defaultValue: data.logo.color,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 57\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"fontSize\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 57\n            }\n          }, \"Font Size:\"), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"fontSize\",\n            ref: function ref(node) {\n              fontSize = node;\n            },\n            placeholder: \"Font Size\",\n            defaultValue: data.logo.fontSize,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 57\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"backgroundColor\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 57\n            }\n          }, \"Background Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"color\",\n            className: \"form-control\",\n            name: \"backgroundColor\",\n            ref: function ref(node) {\n              backgroundColor = node;\n            },\n            placeholder: \"Background Color\",\n            defaultValue: data.logo.backgroundColor,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 57\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"borderColor\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 57\n            }\n          }, \"Border Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"color\",\n            className: \"form-control\",\n            name: \"borderColor\",\n            ref: function ref(node) {\n              borderColor = node;\n            },\n            placeholder: \"Border Color\",\n            defaultValue: data.logo.borderColor,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 57\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"borderRadius\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 57\n            }\n          }, \"Border Radius:\"), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"borderRadius\",\n            ref: function ref(node) {\n              borderRadius = node;\n            },\n            placeholder: \"Border Radius\",\n            defaultValue: data.logo.borderRadius,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 57\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"borderWidth\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 57\n            }\n          }, \"Border Width:\"), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"borderWidth\",\n            ref: function ref(node) {\n              borderWidth = node;\n            },\n            placeholder: \"Border Width\",\n            defaultValue: data.logo.borderWidth,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 57\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"padding\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 57\n            }\n          }, \"Padding:\"), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"padding\",\n            ref: function ref(node) {\n              padding = node;\n            },\n            placeholder: \"Padding\",\n            defaultValue: data.logo.padding,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 57\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"margin\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 57\n            }\n          }, \"Margin:\"), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"margin\",\n            ref: function ref(node) {\n              margin = node;\n            },\n            placeholder: \"Margin\",\n            defaultValue: data.logo.margin,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 57\n            }\n          })), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 53\n            }\n          }, \"Submit\")), loading && /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 61\n            }\n          }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 59\n            }\n          }, \"Error :( Please try again\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col s7\",\n            style: style,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 45\n            }\n          }, _this2.state.text))));\n        });\n      });\n    }\n  }]);\n\n  return EditLogoScreen;\n}(Component);\n\nexport default EditLogoScreen;","map":{"version":3,"sources":["C:/Users/Tyler/Desktop/CSE 316/hw3/client/src/components/EditLogoScreen.js"],"names":["React","Component","Link","gql","Query","Mutation","GET_LOGO","UPDATE_LOGO","EditLogoScreen","handleTextChange","event","console","log","setState","text","target","value","state","setup","color","fontSize","backgroundColor","borderColor","borderRadius","borderWidth","padding","margin","style","logoId","props","match","params","id","loading","error","data","message","borderStyle","logo","_id","history","push","updateLogo","e","preventDefault","variables","parseInt","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\n\n\nconst GET_LOGO = gql`\n    query logo($logoId: String) {\n        logo(id: $logoId) {\n            _id\n            text\n            color\n            fontSize\n            backgroundColor\n            borderColor\n            borderRadius\n            borderWidth\n            padding\n            margin\n        }\n    }\n`;\n\nconst UPDATE_LOGO = gql`\n    mutation updateLogo(\n        $id: String!,\n        $text: String!,\n        $color: String!,\n        $fontSize: Int!,\n        $backgroundColor:String!,\n        $borderColor:String!,\n        $borderRadius:Int!,\n        $borderWidth:Int!,\n        $padding:Int!,\n        $margin:Int!) {\n            updateLogo(\n                id: $id,\n                text: $text,\n                color: $color,\n                fontSize: $fontSize,\n                backgroundColor:$backgroundColor,\n                borderColor:$borderColor,\n                borderRadius:$borderRadius,\n                borderWidth:$borderWidth,\n                padding:$padding,\n                margin:$margin) {\n                    lastUpdate\n                }\n        }\n`;\n\nclass EditLogoScreen extends Component {\n    constructor() {\n        super();\n\n        // WE'LL MANAGE THE UI CONTROL\n        // VALUES HERE\n        this.state = {\n            setup: true,\n            text: \"\",\n            color: \"\",\n            fontSize: 0,\n            backgroundColor: \"\",\n            borderColor: \"\",\n            borderRadius: 0,\n            borderWidth: 0,\n            padding: 0,\n            margin: 0\n        }\n    }\n\n    handleTextChange = (event) => {\n        console.log(\"text change\");\n        this.setState({ text: event.target.value });\n    }\n\n    render() {\n        let text, color, fontSize, backgroundColor, borderColor, borderRadius, borderWidth, padding, margin;\n        let style = {};\n        return (\n            <Query query={GET_LOGO} variables={{ logoId: this.props.match.params.id }}>\n                {({ loading, error, data }) => {\n                    if (loading) return 'Loading...';\n                    if (error) return `Error! ${error.message}`;\n                    style = {\n                        borderStyle: \"solid\",\n                        color: data.logo.color,\n                        fontSize: data.logo.fontSize + \"pt\",\n                        backgroundColor: data.logo.backgroundColor,\n                        borderColor: data.logo.borderColor,\n                        borderRadius: data.logo.borderRadius + \"pt\",\n                        borderWidth: data.logo.borderWidth + \"pt\",\n                        padding: data.logo.padding + \"pt\",\n                        margin: data.logo.margin + \"pt\"\n                    }\n\n                    return (\n                        <Mutation mutation={UPDATE_LOGO} key={data.logo._id} onCompleted={() => this.props.history.push(`/`)}>\n                            {(updateLogo, { loading, error }) => (\n                                <div className=\"container\">\n                                    <div className=\"panel panel-default\">\n                                        <div className=\"panel-heading\">\n                                            <h4><Link to=\"/\">Home</Link></h4>\n                                            <h3 className=\"panel-title\">\n                                                Edit Logo\n                                        </h3>\n                                        </div>\n                                        <div className=\"row\">\n\n                                            <div className=\"panel-body\">\n\n                                                <form onSubmit={e => {\n                                                    e.preventDefault();\n                                                    updateLogo({\n                                                        variables: {\n                                                            id: data.logo._id, text: text.value, color: color.value, fontSize: parseInt(fontSize.value),\n                                                            backgroundColor: backgroundColor.value, borderColor: borderColor.value, borderRadius: parseInt(borderRadius.value),\n                                                            borderWidth: parseInt(borderWidth.value), padding: parseInt(padding.value), margin: parseInt(margin.value)\n                                                        }\n                                                    });\n                                                    text.value = \"\";\n                                                    color.value = \"\";\n                                                    fontSize.value = \"\";\n                                                    backgroundColor.value = \"\";\n                                                    borderColor.value = \"\";\n                                                    borderRadius.value = \"\";\n                                                    borderWidth.value = \"\";\n                                                    padding.value = \"\";\n                                                    margin.value = \"\";\n                                                }}>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"text\">Text:</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"text\" ref={node => {\n                                                            text = node;\n                                                        }} placeholder=\"Text\" onChange={this.handleTextChange} defaultValue={data.logo.text} />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"color\">Color:</label>\n                                                        <input type=\"color\" className=\"form-control\" name=\"color\" ref={node => {\n                                                            color = node;\n                                                        }} placeholder=\"Color\" defaultValue={data.logo.color} />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"fontSize\">Font Size:</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"fontSize\" ref={node => {\n                                                            fontSize = node;\n                                                        }} placeholder=\"Font Size\" defaultValue={data.logo.fontSize} />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"backgroundColor\">Background Color:</label>\n                                                        <input type=\"color\" className=\"form-control\" name=\"backgroundColor\" ref={node => {\n                                                            backgroundColor = node;\n                                                        }} placeholder=\"Background Color\" defaultValue={data.logo.backgroundColor} />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"borderColor\">Border Color:</label>\n                                                        <input type=\"color\" className=\"form-control\" name=\"borderColor\" ref={node => {\n                                                            borderColor = node;\n                                                        }} placeholder=\"Border Color\" defaultValue={data.logo.borderColor} />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"borderRadius\">Border Radius:</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"borderRadius\" ref={node => {\n                                                            borderRadius = node;\n                                                        }} placeholder=\"Border Radius\" defaultValue={data.logo.borderRadius} />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"borderWidth\">Border Width:</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"borderWidth\" ref={node => {\n                                                            borderWidth = node;\n                                                        }} placeholder=\"Border Width\" defaultValue={data.logo.borderWidth} />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"padding\">Padding:</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"padding\" ref={node => {\n                                                            padding = node;\n                                                        }} placeholder=\"Padding\" defaultValue={data.logo.padding} />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"margin\">Margin:</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"margin\" ref={node => {\n                                                            margin = node;\n                                                        }} placeholder=\"Margin\" defaultValue={data.logo.margin} />\n                                                    </div>\n\n                                                    <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                                                </form>\n                                                {loading && <p>Loading...</p>}\n                                                {error && <p>Error :( Please try again</p>}\n                                            </div>\n                                            <div className=\"col s7\" style={style}>\n                                                {this.state.text}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </Mutation>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default EditLogoScreen;"]},"metadata":{},"sourceType":"module"}