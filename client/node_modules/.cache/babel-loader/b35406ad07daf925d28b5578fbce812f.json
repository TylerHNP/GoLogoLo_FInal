{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\src\\\\components\\\\Workspace.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation Addlogo($name:String!,$texts: [textInput]!,$images: [imageInput]!,$height:Int!, $width: Int!){\\n    addLogo(name: $name, height: $height, width: $width,texts: $texts, images: $images)\\n    {\\n    _id\\n    name\\n    }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation Updatelogo(\\n        $id: String!,\\n        $name:String!,\\n        $texts: [textInput]!,\\n        $images: [imageInput]!,\\n        $height:Int!,\\n        $width: Int!\\n    ){\\n\\t    updateLogo(id: $id,name: $name, height: $height, width: $width,texts: $texts, images: $images){\\n        _id\\n        name\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport '../App.css';\nimport gql from 'graphql-tag';\nimport { Mutation } from \"react-apollo\";\nimport Canvas from './WorkspaceCanvas';\nvar UPDATE_LOGO = gql(_templateObject());\nvar ADD_LOGO = gql(_templateObject2());\n\nvar Workspace = /*#__PURE__*/function (_Component) {\n  _inherits(Workspace, _Component);\n\n  function Workspace(props) {\n    var _this;\n\n    _classCallCheck(this, Workspace);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Workspace).call(this, props));\n\n    _this.layerControls = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          paddingLeft: \"0.5rem\"\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          textAlign: \"center\"\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"#a5ffd6\"\n        },\n        className: \"control_button\",\n        onClick: _this.handleBringFoward,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, \"Bring forward\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          textAlign: \"center\"\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"#f0b67f\"\n        },\n        className: \"control_button\",\n        onClick: _this.handleSendBackward,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"Send backward\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          textAlign: \"center\"\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"#fe5f55\"\n        },\n        className: \"control_button\",\n        onClick: _this.handleRemove,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, \"  Remove\"), \" \"));\n    };\n\n    _this.handleAddText = function () {\n      if (!_this.newTextInput.current.value) {\n        alert(\"Please enter a text value\");\n        return;\n      }\n\n      var newText = {\n        layer: _this.state.contents.length,\n        text: _this.newTextInput.current.value,\n        color: \"#333333\",\n        fontFamily: \"Lato\",\n        fontSize: 20,\n        x: 10,\n        y: 10,\n        __typename: \"text\"\n      };\n      var newContents = _this.state.contents;\n      newContents.push(newText);\n      _this.newTextInput.current.value = null;\n\n      _this.setState({\n        contents: newContents\n      });\n    };\n\n    _this.handleImportImage = function () {\n      if (!_this.newImageInput.current.value) {\n        alert(\"Please enter a valid source for new image\");\n        return;\n      }\n\n      var newImage = {\n        layer: _this.state.contents.length,\n        src: _this.newImageInput.current.value,\n        x: 10,\n        y: 10,\n        height: 100,\n        width: 100,\n        __typename: \"image\"\n      };\n      var newContents = _this.state.contents;\n      newContents.push(newImage);\n\n      _this.setState({\n        contents: newContents\n      });\n\n      _this.newImageInput.current.value = null;\n    };\n\n    _this.handleBringFoward = function () {\n      console.log(\"bring forward\");\n      var currentSelected = _this.state.selected;\n\n      if (currentSelected !== _this.state.contents.length - 1) {\n        var newContents = _this.state.contents;\n        var temp = newContents[currentSelected + 1];\n        temp.layer = currentSelected;\n        newContents[currentSelected].layer = currentSelected + 1;\n        newContents[currentSelected + 1] = newContents[currentSelected];\n        newContents[currentSelected] = temp;\n\n        _this.setState({\n          selected: currentSelected + 1,\n          contents: newContents\n        }); // console.log(this.state.contents);\n\n      }\n    };\n\n    _this.handleSendBackward = function () {\n      console.log(\"send backward\");\n      var currentSelected = _this.state.selected;\n\n      if (currentSelected === 0) {\n        return;\n      }\n\n      var newContents = _this.state.contents;\n      var temp = newContents[currentSelected - 1];\n      temp.layer = currentSelected;\n      newContents[currentSelected].layer = currentSelected - 1;\n      newContents[currentSelected - 1] = newContents[currentSelected];\n      newContents[currentSelected] = temp;\n\n      _this.setState({\n        selected: currentSelected - 1,\n        contents: newContents\n      }); // console.log(this.state.contents);\n\n    };\n\n    _this.handleRemove = function () {\n      console.log(\"remove\");\n      var newContents = _this.state.contents;\n      newContents.splice(_this.state.selected, 1);\n      newContents.forEach(function (content, index) {\n        content.layer = index;\n      });\n\n      _this.setState({\n        selected: null,\n        contents: newContents\n      });\n    };\n\n    _this.handleTextFontSizeChange = function (e) {\n      var newContents = _this.state.contents;\n      newContents[_this.state.selected].fontSize = Number.parseInt(e.target.value) ? Number.parseInt(e.target.value) : 0;\n\n      _this.setState({\n        contents: newContents\n      });\n    };\n\n    _this.handleTextColorChange = function (e) {\n      var newContents = _this.state.contents;\n      newContents[_this.state.selected].color = e.target.value;\n\n      _this.setState({\n        contents: newContents\n      });\n    };\n\n    _this.handleImageWidthChange = function (e) {\n      var newContents = _this.state.contents;\n      newContents[_this.state.selected].width = Number.parseInt(e.target.value) ? Number.parseInt(e.target.value) : 0;\n\n      _this.setState({\n        contents: newContents\n      });\n    };\n\n    _this.handleImageHeightChange = function (e) {\n      var newContents = _this.state.contents;\n      newContents[_this.state.selected].height = Number.parseInt(e.target.value) ? Number.parseInt(e.target.value) : 0;\n\n      _this.setState({\n        contents: newContents\n      });\n    };\n\n    _this.changePosition = function (layer, x, y) {\n      var newContents = _this.state.contents;\n      newContents[layer].x = x;\n      newContents[layer].y = y;\n\n      _this.setState({\n        contents: newContents\n      });\n    };\n\n    _this.changeSelect = function (e) {\n      _this.setState({\n        selected: parseInt(e.id())\n      });\n    };\n\n    _this.deSelect = function () {\n      _this.setState({\n        selected: null\n      });\n    };\n\n    _this.handleUpdate = function () {\n      // console.log(this.history);\n      return /*#__PURE__*/React.createElement(Mutation, {\n        mutation: UPDATE_LOGO,\n        key: _this.state.id,\n        onCompleted: function onCompleted() {\n          return _this.history.push(\"/\");\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, function (updateLogo, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n        if (loading) return 'Loading...';\n        if (error) return \"Error! \".concat(error.message);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            flex: 1,\n            textAlign: \"center\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"main_button\",\n          style: {\n            color: \"#a5ffd6\"\n          },\n          onClick: function onClick(e) {\n            e.preventDefault();\n            var newTexts = [];\n            var newImages = [];\n\n            _this.state.contents.forEach(function (element) {\n              var toAdd = _objectSpread({}, element);\n\n              if (toAdd.__typename === \"text\") {\n                delete toAdd.__typename;\n                newTexts.push(toAdd);\n              } else {\n                delete toAdd.__typename;\n                newImages.push(toAdd);\n              }\n            });\n\n            console.log(_this.state.contents);\n            updateLogo({\n              variables: {\n                id: _this.state.id,\n                name: _this.state.name,\n                height: _this.state.height,\n                width: _this.state.width,\n                texts: newTexts,\n                images: newImages\n              }\n            });\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }\n        }, \"  Save\"));\n      });\n    };\n\n    _this.handleAdd = function () {\n      return /*#__PURE__*/React.createElement(Mutation, {\n        mutation: ADD_LOGO,\n        onCompleted: function onCompleted() {\n          return _this.props.history.push('/');\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, function (addLogo, _ref2) {\n        var loading = _ref2.loading,\n            error = _ref2.error;\n        if (loading) return 'Loading...';\n        if (error) return \"Error! \".concat(error.message);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            flex: 1,\n            textAlign: \"center\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"main_button\",\n          style: {\n            color: \"#a5ffd6\"\n          },\n          onClick: function onClick(e) {\n            e.preventDefault();\n            var newTexts = [];\n            var newImages = [];\n\n            _this.state.contents.forEach(function (element) {\n              var toAdd = _objectSpread({}, element);\n\n              if (toAdd.__typename === \"text\") {\n                delete toAdd.__typename;\n                newTexts.push(toAdd);\n              } else {\n                delete toAdd.__typename;\n                newImages.push(toAdd);\n              }\n            });\n\n            console.log(_this.state.contents);\n            addLogo({\n              variables: {\n                name: _this.state.name,\n                height: _this.state.height,\n                width: _this.state.width,\n                texts: newTexts,\n                images: newImages\n              }\n            });\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }\n        }, \"  Save\"));\n      });\n    };\n\n    _this.history = props.history;\n    _this.nameInput = React.createRef();\n    _this.newTextInput = React.createRef();\n    _this.newImageInput = React.createRef();\n    _this.state = {\n      selected: null,\n      id: props.logo._id,\n      name: props.logo.name,\n      width: props.logo.width,\n      height: props.logo.height,\n      contents: props.logo.texts.concat(props.logo.images).sort(function (logo1, logo2) {\n        if (logo1.layer > logo2.layer) {\n          return 1;\n        } else if (logo1.layer === logo2.layer) {\n          return 0;\n        }\n\n        return -1;\n      })\n    };\n    console.log(_this.state);\n    return _this;\n  }\n\n  _createClass(Workspace, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"control-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"canvas_controls\",\n        className: \"controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yellow\",\n        style: {\n          fontSize: 20,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }, \"Logo\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          paddingLeft: \"0.5rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"long_input\",\n        defaultValue: this.state.name,\n        ref: this.nameInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"control_button\",\n        style: {\n          backgroundColor: \"#f0b67f\"\n        },\n        onClick: function onClick() {\n          _this2.setState({\n            name: _this2.nameInput.current.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 33\n        }\n      }, \" Change Name\"), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          paddingLeft: \"0.5rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"long_input\",\n        placeholder: \"New Text\",\n        ref: this.newTextInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"control_button\",\n        style: {\n          backgroundColor: \"#f0b67f\"\n        },\n        onClick: this.handleAddText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 33\n        }\n      }, \" Add Text\"), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          paddingLeft: \"0.5rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"long_input\",\n        placeholder: \"URL\",\n        ref: this.newImageInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"control_button\",\n        style: {\n          backgroundColor: \"#f0b67f\"\n        },\n        onClick: this.handleImportImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 33\n        }\n      }, \"  Import Image\"), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"control_row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"control_label\",\n        htmlFor: \"canvas_width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }\n      }, \"Width: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"control_input\",\n        name: \"canvas_width\",\n        value: this.state.width,\n        onChange: function onChange(e) {\n          _this2.setState({\n            width: parseInt(e.target.value) ? parseInt(e.target.value) : 0\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"control_label\",\n        htmlFor: \"canvas_height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 29\n        }\n      }, \"Height: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"control_input\",\n        name: \"canvas_height\",\n        value: this.state.height,\n        onChange: function onChange(e) {\n          _this2.setState({\n            height: parseInt(e.target.value) ? parseInt(e.target.value) : 0\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 29\n        }\n      }))), this.state.selected !== null && this.state.contents[this.state.selected].__typename === \"text\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"controls\",\n        id: \"text_controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 122\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yellow\",\n        style: {\n          fontSize: 20,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }\n      }, \"Text\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }\n      }), this.layerControls(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"control_row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"control_label\",\n        htmlFor: \"fontSize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 29\n        }\n      }, \"Size: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"control_input\",\n        name: \"fontSize\",\n        value: this.state.contents[this.state.selected].fontSize,\n        onChange: this.handleTextFontSizeChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"control_label\",\n        htmlFor: \"color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 29\n        }\n      }, \"Color: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"color\",\n        style: {\n          verticalAlign: \"middle\"\n        },\n        className: \"control_input\",\n        name: \"color\",\n        value: this.state.contents[this.state.selected].color,\n        onChange: this.handleTextColorChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"control_label\",\n        htmlFor: \"fontFamily\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }\n      }, \"Font Family: \"), /*#__PURE__*/React.createElement(\"select\", {\n        type: \"color\",\n        style: {\n          verticalAlign: \"middle\"\n        },\n        name: \"fontFamily\",\n        value: this.state.contents[this.state.selected].fontFamily,\n        onChange: this.handleTextColorChange,\n        multiple: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Lato\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 33\n        }\n      }, \"Lato\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Lato\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 33\n        }\n      }, \"Lato\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Lato\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 33\n        }\n      }, \"Lato\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Lato\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 33\n        }\n      }, \"Lato\")))), this.state.selected !== null && this.state.contents[this.state.selected].__typename === \"image\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"controls\",\n        id: \"image_controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 123\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yellow\",\n        style: {\n          fontSize: 20,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }\n      }, \"Image\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 25\n        }\n      }), this.layerControls(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"control_row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"control_label\",\n        htmlFor: \"image_width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 29\n        }\n      }, \"Width: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"control_input\",\n        name: \"image_width\",\n        value: parseInt(this.state.contents[this.state.selected].width),\n        onChange: this.handleImageWidthChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"control_label\",\n        htmlFor: \"image_height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 29\n        }\n      }, \"Height: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"control_input\",\n        name: \"image_height\",\n        value: parseInt(this.state.contents[this.state.selected].height),\n        onChange: this.handleImageHeightChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 29\n        }\n      }))), this.state.selected === null && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"controls\",\n        id: \"instruction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yellow\",\n        style: {\n          fontSize: 20,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 29\n        }\n      }, \"Instruction\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"green\",\n        style: {\n          fontSize: 15,\n          textAlign: \"center\",\n          fontStyle: \"italic\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 29\n        }\n      }, \"Click an image or a text to select and change their attributes.\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flex: 1,\n          marginTop: \"1rem\"\n        },\n        id: \"button_controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }\n      }, !this.props.addCallback && this.handleUpdate(), this.props.addCallback && this.handleAdd(), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"main_button\",\n        style: {\n          color: \"#f0b67f\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 29\n        }\n      }, \"  Export\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"main_button\",\n        style: {\n          color: \"#fe5f55\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 29\n        }\n      }, \"  Delete\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"workplace-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Canvas, {\n        name: this.state.name,\n        width: this.state.width,\n        height: this.state.height,\n        contents: this.state.contents,\n        changePosition: this.changePosition,\n        changeSelect: this.changeSelect,\n        deSelect: this.deSelect,\n        selected: this.state.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Workspace;\n}(Component);\n\nexport default Workspace;","map":{"version":3,"sources":["C:/Users/Tyler/Desktop/CSE 316/GoLogoLo/client/src/components/Workspace.js"],"names":["React","Component","gql","Mutation","Canvas","UPDATE_LOGO","ADD_LOGO","Workspace","props","layerControls","display","paddingLeft","flex","textAlign","backgroundColor","handleBringFoward","handleSendBackward","handleRemove","handleAddText","newTextInput","current","value","alert","newText","layer","state","contents","length","text","color","fontFamily","fontSize","x","y","__typename","newContents","push","setState","handleImportImage","newImageInput","newImage","src","height","width","console","log","currentSelected","selected","temp","splice","forEach","content","index","handleTextFontSizeChange","e","Number","parseInt","target","handleTextColorChange","handleImageWidthChange","handleImageHeightChange","changePosition","changeSelect","id","deSelect","handleUpdate","history","updateLogo","loading","error","message","preventDefault","newTexts","newImages","element","toAdd","variables","name","texts","images","handleAdd","addLogo","nameInput","createRef","logo","_id","concat","sort","logo1","logo2","verticalAlign","fontStyle","marginTop","addCallback"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from \"react-apollo\";\r\nimport Canvas from './WorkspaceCanvas';\r\n\r\n\r\nconst UPDATE_LOGO = gql`\r\n    mutation Updatelogo(\r\n        $id: String!,\r\n        $name:String!,\r\n        $texts: [textInput]!,\r\n        $images: [imageInput]!,\r\n        $height:Int!,\r\n        $width: Int!\r\n    ){\r\n\t    updateLogo(id: $id,name: $name, height: $height, width: $width,texts: $texts, images: $images){\r\n        _id\r\n        name\r\n  }\r\n}\r\n`;\r\n\r\nconst ADD_LOGO = gql`\r\n    mutation Addlogo($name:String!,$texts: [textInput]!,$images: [imageInput]!,$height:Int!, $width: Int!){\r\n    addLogo(name: $name, height: $height, width: $width,texts: $texts, images: $images)\r\n    {\r\n    _id\r\n    name\r\n    }\r\n}\r\n`;\r\n\r\nclass Workspace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.history = props.history;\r\n        this.nameInput = React.createRef();\r\n        this.newTextInput = React.createRef();\r\n        this.newImageInput = React.createRef();\r\n        this.state = {\r\n            selected: null,\r\n            id: props.logo._id,\r\n            name: props.logo.name,\r\n            width: props.logo.width,\r\n            height: props.logo.height,\r\n            contents: (props.logo.texts.concat(props.logo.images).sort(function (logo1, logo2) {\r\n                if (logo1.layer > logo2.layer) {\r\n                    return 1;\r\n                }\r\n                else if (logo1.layer === logo2.layer) {\r\n                    return 0;\r\n                }\r\n                return -1;\r\n            }))\r\n        }\r\n        console.log(this.state)\r\n    }\r\n\r\n    layerControls = () => {\r\n        return (<div style={{ display: \"flex\", paddingLeft: \"0.5rem\" }}>\r\n            <div style={{ flex: 1, textAlign: \"center\" }}>\r\n                <button\r\n                    style={{ backgroundColor: \"#a5ffd6\" }}\r\n                    className=\"control_button\"\r\n                    onClick={this.handleBringFoward}>Bring forward</button></div>\r\n            <div style={{ flex: 1, textAlign: \"center\" }}>\r\n                <button style={{ backgroundColor: \"#f0b67f\" }}\r\n                    className=\"control_button\"\r\n                    onClick={this.handleSendBackward}>Send backward</button> </div>\r\n            <div style={{ flex: 1, textAlign: \"center\" }}>\r\n                <button style={{ backgroundColor: \"#fe5f55\" }}\r\n                    className=\"control_button\"\r\n                    onClick={this.handleRemove}>  Remove</button> </div>\r\n\r\n        </div>);\r\n    }\r\n\r\n    handleAddText = () => {\r\n        if (!this.newTextInput.current.value) {\r\n            alert(\"Please enter a text value\");\r\n            return;\r\n        }\r\n        var newText = {\r\n            layer: this.state.contents.length,\r\n            text: this.newTextInput.current.value,\r\n            color: \"#333333\",\r\n            fontFamily: \"Lato\",\r\n            fontSize: 20,\r\n            x: 10,\r\n            y: 10,\r\n            __typename: \"text\"\r\n        }\r\n        var newContents = this.state.contents;\r\n        newContents.push(newText);\r\n        this.newTextInput.current.value = null;\r\n        this.setState({ contents: newContents });\r\n    }\r\n\r\n    handleImportImage = () => {\r\n        if (!this.newImageInput.current.value) {\r\n            alert(\"Please enter a valid source for new image\");\r\n            return;\r\n        }\r\n        var newImage = {\r\n            layer: this.state.contents.length,\r\n            src: this.newImageInput.current.value,\r\n            x: 10,\r\n            y: 10,\r\n            height: 100,\r\n            width: 100,\r\n            __typename: \"image\"\r\n        }\r\n        var newContents = this.state.contents;\r\n        newContents.push(newImage);\r\n        this.setState({ contents: newContents });\r\n        this.newImageInput.current.value = null;\r\n    }\r\n\r\n    handleBringFoward = () => {\r\n        console.log(\"bring forward\");\r\n        var currentSelected = this.state.selected;\r\n        if (currentSelected !== this.state.contents.length - 1) {\r\n            var newContents = this.state.contents;\r\n            var temp = newContents[currentSelected + 1];\r\n            temp.layer = currentSelected;\r\n            newContents[currentSelected].layer = currentSelected + 1\r\n            newContents[currentSelected + 1] = newContents[currentSelected];\r\n            newContents[currentSelected] = temp;\r\n            this.setState({ selected: currentSelected + 1, contents: newContents })\r\n            // console.log(this.state.contents);\r\n        }\r\n    }\r\n\r\n    handleSendBackward = () => {\r\n        console.log(\"send backward\");\r\n        var currentSelected = this.state.selected;\r\n        if (currentSelected === 0) {\r\n            return;\r\n        }\r\n        var newContents = this.state.contents;\r\n        var temp = newContents[currentSelected - 1];\r\n        temp.layer = currentSelected;\r\n        newContents[currentSelected].layer = currentSelected - 1\r\n        newContents[currentSelected - 1] = newContents[currentSelected];\r\n        newContents[currentSelected] = temp;\r\n        this.setState({ selected: currentSelected - 1, contents: newContents })\r\n        // console.log(this.state.contents);\r\n    }\r\n\r\n    handleRemove = () => {\r\n        console.log(\"remove\");\r\n        var newContents = this.state.contents;\r\n        newContents.splice(this.state.selected, 1);\r\n        newContents.forEach((content, index) => {\r\n            content.layer = index;\r\n        })\r\n        this.setState({ selected: null, contents: newContents });\r\n    }\r\n\r\n    handleTextFontSizeChange = (e) => {\r\n        var newContents = this.state.contents;\r\n        newContents[this.state.selected].fontSize = Number.parseInt(e.target.value)\r\n            ? Number.parseInt(e.target.value) : 0;\r\n        this.setState({ contents: newContents });\r\n    }\r\n\r\n    handleTextColorChange = (e) => {\r\n        var newContents = this.state.contents;\r\n        newContents[this.state.selected].color = e.target.value;\r\n        this.setState({ contents: newContents });\r\n    }\r\n\r\n    handleImageWidthChange = (e) => {\r\n        var newContents = this.state.contents;\r\n        newContents[this.state.selected].width = Number.parseInt(e.target.value)\r\n            ? Number.parseInt(e.target.value) : 0;\r\n        this.setState({ contents: newContents });\r\n    }\r\n\r\n    handleImageHeightChange = (e) => {\r\n        var newContents = this.state.contents;\r\n        newContents[this.state.selected].height = Number.parseInt(e.target.value)\r\n            ? Number.parseInt(e.target.value) : 0;\r\n        this.setState({ contents: newContents });\r\n    }\r\n\r\n    changePosition = (layer, x, y) => {\r\n        var newContents = this.state.contents;\r\n        newContents[layer].x = x;\r\n        newContents[layer].y = y;\r\n        this.setState({ contents: newContents })\r\n    }\r\n\r\n    changeSelect = (e) => {\r\n        this.setState({ selected: parseInt(e.id()) });\r\n    }\r\n\r\n    deSelect = () => {\r\n        this.setState({ selected: null });\r\n    }\r\n\r\n    handleUpdate = () => {\r\n        // console.log(this.history);\r\n        return (\r\n            <Mutation mutation={UPDATE_LOGO} key={this.state.id} onCompleted={() => this.history.push(`/`)}>\r\n                {(updateLogo, { loading, error }) => {\r\n                    if (loading) return 'Loading...';\r\n                    if (error) return `Error! ${error.message}`;\r\n                    return (\r\n                        <div style={{ flex: 1, textAlign: \"center\" }}>\r\n                            <button className=\"main_button\" style={{ color: \"#a5ffd6\" }} onClick={e => {\r\n                                e.preventDefault();\r\n                                var newTexts = [];\r\n                                var newImages = [];\r\n                                this.state.contents.forEach(element => {\r\n                                    var toAdd = { ...element };\r\n                                    if (toAdd.__typename === \"text\") {\r\n                                        delete toAdd.__typename;\r\n                                        newTexts.push(toAdd);\r\n\r\n                                    }\r\n                                    else {\r\n                                        delete toAdd.__typename;\r\n                                        newImages.push(toAdd);\r\n                                    }\r\n\r\n\r\n                                });\r\n                                console.log(this.state.contents);\r\n                                updateLogo({\r\n                                    variables: {\r\n                                        id: this.state.id, name: this.state.name, height: this.state.height, width: this.state.width,\r\n                                        texts: newTexts, images: newImages\r\n                                    }\r\n                                });\r\n                            }}\r\n                            >  Save</button>\r\n                        </div>\r\n                    )\r\n                }\r\n                }\r\n\r\n            </Mutation>);\r\n    }\r\n\r\n\r\n\r\n    handleAdd = () => {\r\n        return (\r\n            <Mutation mutation={ADD_LOGO} onCompleted={() => this.props.history.push('/')}>\r\n                {(addLogo, { loading, error }) => {\r\n                    if (loading) return 'Loading...';\r\n                    if (error) return `Error! ${error.message}`;\r\n                    return (\r\n                        <div style={{ flex: 1, textAlign: \"center\" }}>\r\n                            <button className=\"main_button\" style={{ color: \"#a5ffd6\" }} onClick={e => {\r\n                                e.preventDefault();\r\n                                var newTexts = [];\r\n                                var newImages = [];\r\n                                this.state.contents.forEach(element => {\r\n                                    var toAdd = { ...element };\r\n                                    if (toAdd.__typename === \"text\") {\r\n                                        delete toAdd.__typename;\r\n                                        newTexts.push(toAdd);\r\n\r\n                                    }\r\n                                    else {\r\n                                        delete toAdd.__typename;\r\n                                        newImages.push(toAdd);\r\n                                    }\r\n\r\n\r\n                                });\r\n                                console.log(this.state.contents);\r\n                                addLogo({\r\n                                    variables: {\r\n                                        name: this.state.name, height: this.state.height, width: this.state.width,\r\n                                        texts: newTexts, images: newImages\r\n                                    }\r\n                                });\r\n                            }}\r\n                            >  Save</button>\r\n                        </div>\r\n                    )\r\n                }\r\n                }\r\n\r\n            </Mutation>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"control-container\">\r\n                    <div id=\"canvas_controls\" className=\"controls\" >\r\n                        <div className=\"yellow\" style={{\r\n                            fontSize: 20,\r\n                            textAlign: \"center\"\r\n                        }\r\n                        }>Logo</div>\r\n                        <br />\r\n                        <div style={{ display: \"flex\", paddingLeft: \"0.5rem\" }}>\r\n                            <input type=\"text\" className=\"long_input\" defaultValue={this.state.name} ref={this.nameInput} />\r\n                            <div style={{ flex: 1, textAlign: \"center\" }}>\r\n                                <button\r\n                                    className=\"control_button\"\r\n                                    style={{\r\n                                        backgroundColor: \"#f0b67f\"\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        this.setState({ name: this.nameInput.current.value });\r\n                                    }}\r\n                                > Change Name</button> </div>\r\n                        </div>\r\n                        <br />\r\n                        <div style={{ display: \"flex\", paddingLeft: \"0.5rem\" }}>\r\n                            <input type=\"text\" className=\"long_input\" placeholder=\"New Text\" ref={this.newTextInput} />\r\n                            <div style={{ flex: 1, textAlign: \"center\" }}>\r\n                                <button className=\"control_button\" style={{\r\n                                    backgroundColor: \"#f0b67f\"\r\n                                }}\r\n                                    onClick={this.handleAddText}> Add Text</button> </div>\r\n                        </div>\r\n                        <br />\r\n                        <div style={{ display: \"flex\", paddingLeft: \"0.5rem\" }}>\r\n                            <input type=\"text\" className=\"long_input\" placeholder=\"URL\" ref={this.newImageInput} />\r\n                            <div style={{ flex: 1, textAlign: \"center\" }}>\r\n                                <button className=\"control_button\"\r\n                                    style={{\r\n                                        backgroundColor: \"#f0b67f\"\r\n                                    }} onClick={this.handleImportImage}>  Import Image</button> </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"control_row\">\r\n                            <label className=\"control_label\" htmlFor=\"canvas_width\">Width: </label>\r\n                            <input type=\"number\" className=\"control_input\" name=\"canvas_width\" value={this.state.width}\r\n                                onChange={e => { this.setState({ width: parseInt(e.target.value) ? parseInt(e.target.value) : 0 }) }} />\r\n                            <label className=\"control_label\" htmlFor=\"canvas_height\">Height: </label>\r\n                            <input type=\"number\" className=\"control_input\" name=\"canvas_height\" value={this.state.height}\r\n                                onChange={e => { this.setState({ height: parseInt(e.target.value) ? parseInt(e.target.value) : 0 }) }} />\r\n                        </div>\r\n                    </div>\r\n                    {(this.state.selected !== null && this.state.contents[this.state.selected].__typename === \"text\") && <div className=\"controls\" id=\"text_controls\">\r\n                        <div className=\"yellow\" style={{\r\n                            fontSize: 20,\r\n                            textAlign: \"center\"\r\n                        }\r\n                        }>Text</div>\r\n                        <br />\r\n                        {this.layerControls()}\r\n                        <br />\r\n                        <div className=\"control_row\">\r\n                            <label className=\"control_label\" htmlFor=\"fontSize\">Size: </label>\r\n                            <input type=\"number\" className=\"control_input\" name=\"fontSize\" value={this.state.contents[this.state.selected].fontSize}\r\n                                onChange={this.handleTextFontSizeChange}\r\n                            />\r\n                            <label className=\"control_label\" htmlFor=\"color\">Color: </label>\r\n                            <input type=\"color\" style={{ verticalAlign: \"middle\" }} className=\"control_input\" name=\"color\" value={this.state.contents[this.state.selected].color}\r\n                                onChange={this.handleTextColorChange} />\r\n\r\n                            <label className=\"control_label\" htmlFor=\"fontFamily\">Font Family: </label>\r\n                            <select type=\"color\" style={{ verticalAlign: \"middle\" }} name=\"fontFamily\"\r\n                                value={this.state.contents[this.state.selected].fontFamily}\r\n                                onChange={this.handleTextColorChange} multiple={false} >\r\n                                <option value=\"Lato\">Lato</option>\r\n                                <option value=\"Lato\">Lato</option>\r\n                                <option value=\"Lato\">Lato</option>\r\n                                <option value=\"Lato\">Lato</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>}\r\n                    {(this.state.selected !== null && this.state.contents[this.state.selected].__typename === \"image\") && <div className=\"controls\" id=\"image_controls\">\r\n                        <div className=\"yellow\" style={{\r\n                            fontSize: 20,\r\n                            textAlign: \"center\"\r\n                        }\r\n                        }>Image</div>\r\n                        <br />\r\n                        {this.layerControls()}\r\n                        <br />\r\n                        <div className=\"control_row\">\r\n                            <label className=\"control_label\" htmlFor=\"image_width\">Width: </label>\r\n                            <input type=\"number\" className=\"control_input\" name=\"image_width\"\r\n                                value={parseInt(this.state.contents[this.state.selected].width)}\r\n                                onChange={this.handleImageWidthChange} />\r\n                            <label className=\"control_label\" htmlFor=\"image_height\">Height: </label>\r\n                            <input type=\"number\" className=\"control_input\" name=\"image_height\"\r\n                                value={parseInt(this.state.contents[this.state.selected].height)}\r\n                                onChange={this.handleImageHeightChange} />\r\n                        </div>\r\n                    </div>}\r\n                    {(this.state.selected === null) &&\r\n                        <div className=\"controls\" id=\"instruction\">\r\n                            <div className=\"yellow\" style={{\r\n                                fontSize: 20,\r\n                                textAlign: \"center\"\r\n                            }\r\n                            }>Instruction</div>\r\n                            <br />\r\n                            <br />\r\n                            <div className=\"green\" style={{\r\n                                fontSize: 15,\r\n                                textAlign: \"center\",\r\n                                fontStyle: \"italic\"\r\n                            }\r\n                            }>Click an image or a text to select and change their attributes.</div>\r\n                            <br />\r\n                            <br />\r\n                        </div>\r\n                    }\r\n\r\n                    <div style={{ display: \"flex\", flex: 1, marginTop: \"1rem\" }} id=\"button_controls\">\r\n\r\n                        {(!this.props.addCallback) && this.handleUpdate()}\r\n                        {(this.props.addCallback) && this.handleAdd()}\r\n                        <div style={{ flex: 1, textAlign: \"center\" }}>\r\n                            <button className=\"main_button\" style={{ color: \"#f0b67f\" }}>  Export</button>\r\n                        </div>\r\n                        <div style={{ flex: 1, textAlign: \"center\" }}>\r\n                            <button className=\"main_button\" style={{ color: \"#fe5f55\" }}>  Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"workplace-container\">\r\n                    <Canvas\r\n                        name={this.state.name}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        contents={this.state.contents}\r\n                        changePosition={this.changePosition}\r\n                        changeSelect={this.changeSelect}\r\n                        deSelect={this.deSelect}\r\n                        selected={this.state.selected}\r\n                    />\r\n                </div>\r\n            </section >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Workspace;\r\n"]},"metadata":{},"sourceType":"module"}