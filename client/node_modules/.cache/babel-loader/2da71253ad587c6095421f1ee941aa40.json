{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\src\\\\components\\\\WorkspaceCanvas.js\";\nimport React, { Component, createRef } from 'react';\nimport '../App.css';\nimport { Stage, Text, Rect, Layer, Transformer } from 'react-konva';\nimport URLImage from \"./URLImage\";\n\nvar WorkspaceCanvas = /*#__PURE__*/function (_Component) {\n  _inherits(WorkspaceCanvas, _Component);\n\n  function WorkspaceCanvas() {\n    var _this;\n\n    _classCallCheck(this, WorkspaceCanvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorkspaceCanvas).call(this));\n\n    _this.changefontSize = function (e) {\n      console.log(_this.selectedRef.fontSize());\n\n      _this.props.handleTransform(_this.selectedRef.fontSize());\n    };\n\n    _this.onDragEnd = function (e) {\n      _this.selectedRef = e.target;\n\n      _this.props.changeSelect(e.target);\n\n      _this.props.changePosition(e.target.id(), e.target.x(), e.target.y());\n    };\n\n    _this.onSelect = function (e) {\n      _this.selectedRef = e.target;\n\n      _this.props.changeSelect(e.target);\n    };\n\n    _this.renderCanvas = function () {\n      if (_this.props.contents) {\n        return /*#__PURE__*/React.createElement(Layer, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Rect, {\n          width: _this.props.width,\n          height: _this.props.height,\n          fill: \"#e8eef2\",\n          onClick: _this.props.deSelect,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }\n        }), _this.props.contents.map(function (content, index) {\n          var selectedSwitch = _this.props.selected !== null && index === _this.props.selected;\n\n          if (content.__typename === \"text\") {\n            return /*#__PURE__*/React.createElement(React.Fragment, {\n              key: index,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }\n            }, selectedSwitch && /*#__PURE__*/React.createElement(Transformer, {\n              node: _this.selectedRef,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 56\n              }\n            }), /*#__PURE__*/React.createElement(Text, {\n              id: content.layer,\n              name: content.__typename,\n              text: content.text,\n              x: content.x,\n              y: content.y,\n              fill: content.color,\n              fontSize: content.fontSize,\n              fontFamily: content.fontFamily,\n              draggable: true,\n              onDragStart: _this.props.deSelect,\n              onDragEnd: _this.onDragEnd,\n              onClick: _this.onSelect,\n              align: \"center\",\n              verticalAlign: \"middle\",\n              onTransformEnd: _this.changeSize,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(URLImage, {\n              src: content.src,\n              key: index,\n              id: content.layer,\n              name: content.__typename,\n              text: content.text,\n              x: content.x,\n              y: content.y,\n              draggable: true,\n              width: content.width,\n              height: content.height,\n              onDragEnd: _this.onDragEnd,\n              onClick: _this.onSelect,\n              strokeWidth: 7,\n              stroke: \"#fe5f55\",\n              strokeEnabled: selectedSwitch,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }\n            });\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(Stage, {\n        width: window.innerWidth * 0.6,\n        height: window.innerHeight * 0.65,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Layer, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Rect, {\n        width: window.innerWidth * 0.6,\n        height: window.innerHeight * 0.65,\n        fill: \"#e8eef2\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Text, {\n        text: \"Please add a text or import an image.\",\n        x: window.innerWidth * 0.6 / 2 - 250,\n        y: window.innerHeight * 0.65 / 2,\n        fill: \" #333333\",\n        fontSize: 24,\n        width: 500,\n        opacity: 1,\n        fontFamily: \"Lato\",\n        align: \"center\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      })));\n    };\n\n    _this.selectedRef = createRef();\n    return _this;\n  }\n\n  _createClass(WorkspaceCanvas, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"canvas_container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"yellow\",\n        style: {\n          padding: \"1rem\",\n          fontSize: 24,\n          textAlign: \"center\" // fontStyle: \"italic\"\n\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, this.props.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"preview_canvas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Stage, {\n        width: this.props.width,\n        height: this.props.height,\n        ref: this.props.stageRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, this.renderCanvas())));\n    }\n  }]);\n\n  return WorkspaceCanvas;\n}(Component);\n\nexport default WorkspaceCanvas;","map":{"version":3,"sources":["C:/Users/Tyler/Desktop/CSE 316/GoLogoLo/client/src/components/WorkspaceCanvas.js"],"names":["React","Component","createRef","Stage","Text","Rect","Layer","Transformer","URLImage","WorkspaceCanvas","changefontSize","e","console","log","selectedRef","fontSize","props","handleTransform","onDragEnd","target","changeSelect","changePosition","id","x","y","onSelect","renderCanvas","contents","width","height","deSelect","map","content","index","selectedSwitch","selected","__typename","layer","text","color","fontFamily","changeSize","src","window","innerWidth","innerHeight","padding","textAlign","name","stageRef"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from 'react';\r\nimport '../App.css';\r\nimport { Stage, Text, Rect, Layer, Transformer } from 'react-konva';\r\nimport URLImage from \"./URLImage\";\r\n\r\n\r\nclass WorkspaceCanvas extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.selectedRef = createRef()\r\n    }\r\n\r\n\r\n    changefontSize = (e) => {\r\n        console.log(this.selectedRef.fontSize());\r\n        this.props.handleTransform(this.selectedRef.fontSize());\r\n    }\r\n\r\n    onDragEnd = (e) => {\r\n        this.selectedRef = e.target;\r\n        this.props.changeSelect(e.target);\r\n        this.props.changePosition(e.target.id(), e.target.x(), e.target.y());\r\n\r\n    }\r\n    onSelect = (e) => {\r\n        this.selectedRef = e.target;\r\n        this.props.changeSelect(e.target);\r\n    }\r\n    renderCanvas = () => {\r\n        if (this.props.contents) {\r\n            return (\r\n                <Layer>\r\n                    <Rect width={this.props.width} height={this.props.height} fill={\"#e8eef2\"} onClick={this.props.deSelect} />\r\n                    {this.props.contents.map((content, index) => {\r\n                        var selectedSwitch = ((this.props.selected !== null) && (index === this.props.selected));\r\n\r\n                        if (content.__typename === \"text\") {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    {selectedSwitch && <Transformer node={this.selectedRef} />}\r\n                                    <Text\r\n                                        id={content.layer}\r\n                                        name={content.__typename}\r\n                                        text={content.text}\r\n                                        x={content.x}\r\n                                        y={content.y}\r\n                                        fill={content.color}\r\n                                        fontSize={content.fontSize}\r\n                                        fontFamily={content.fontFamily}\r\n                                        draggable\r\n                                        onDragStart={this.props.deSelect}\r\n                                        onDragEnd={this.onDragEnd}\r\n                                        onClick={this.onSelect}\r\n                                        align={\"center\"}\r\n                                        verticalAlign={\"middle\"}\r\n                                        onTransformEnd={this.changeSize}\r\n                                    />\r\n                                </React.Fragment>\r\n                            );\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <URLImage src={content.src} key={index}\r\n                                    id={content.layer}\r\n                                    name={content.__typename}\r\n                                    text={content.text}\r\n                                    x={content.x}\r\n                                    y={content.y}\r\n                                    draggable={true}\r\n                                    width={content.width}\r\n                                    height={content.height}\r\n                                    onDragEnd={this.onDragEnd}\r\n                                    onClick={this.onSelect}\r\n                                    strokeWidth={7}\r\n                                    stroke={\"#fe5f55\"}\r\n                                    strokeEnabled={selectedSwitch}\r\n                                />\r\n\r\n                            );\r\n                        }\r\n                    })}\r\n                </Layer>);\r\n        }\r\n\r\n        return (<Stage width={window.innerWidth * 0.6} height={window.innerHeight * 0.65} >\r\n            <Layer>\r\n                <Rect width={window.innerWidth * 0.6} height={window.innerHeight * 0.65} fill={\"#e8eef2\"} />\r\n                <Text\r\n                    text={\"Please add a text or import an image.\"}\r\n                    x={window.innerWidth * 0.6 / 2 - 250}\r\n                    y={window.innerHeight * 0.65 / 2}\r\n                    fill={\" #333333\"}\r\n                    fontSize={24}\r\n                    width={500}\r\n                    opacity={1}\r\n                    fontFamily={\"Lato\"}\r\n                    align={\"center\"}\r\n                />\r\n            </Layer></Stage>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"canvas_container\">\r\n                <div className=\"yellow\" style={{\r\n                    padding: \"1rem\",\r\n                    fontSize: 24,\r\n                    textAlign: \"center\",\r\n                    // fontStyle: \"italic\"\r\n                }\r\n                }>{this.props.name} </div>\r\n                <div id=\"preview_canvas\" >\r\n                    <Stage width={this.props.width} height={this.props.height} ref={this.props.stageRef}>{this.renderCanvas()}</Stage>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default WorkspaceCanvas;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}