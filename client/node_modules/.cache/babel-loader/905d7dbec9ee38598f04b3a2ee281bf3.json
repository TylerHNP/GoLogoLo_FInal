{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\src\\\\components\\\\PreviewCanvas.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Stage, Text, Rect, Layer } from 'react-konva';\nimport URLImage from \"./URLImage\";\n\nvar PreviewCanvas = /*#__PURE__*/function (_Component) {\n  _inherits(PreviewCanvas, _Component);\n\n  function PreviewCanvas(props) {\n    var _this;\n\n    _classCallCheck(this, PreviewCanvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PreviewCanvas).call(this));\n\n    _this.renderCanvas = function () {\n      if (_this.props.selected) {\n        return /*#__PURE__*/React.createElement(Stage, {\n          width: _this.props.width,\n          height: _this.props.height,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Layer, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Rect, {\n          width: _this.props.width,\n          height: _this.props.height,\n          fill: \"#e8eef2\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }\n        })), _this.props.contents.map(function (content, index) {\n          console.log(content.layer + \" \" + index);\n\n          if (content.type === \"text\") {\n            return /*#__PURE__*/React.createElement(Layer, {\n              key: index,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 33\n              }\n            }, /*#__PURE__*/React.createElement(Text, {\n              id: content.layer,\n              name: content.type,\n              text: content.text,\n              x: content.x,\n              y: content.y,\n              fill: content.color,\n              fontSize: content.fontSize,\n              fontFamily: content.fontFamily,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 52\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(Layer, {\n              key: index,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(URLImage, {\n              src: content.src,\n              id: content.layer,\n              name: content.type,\n              text: content.text,\n              x: content.x,\n              y: content.y,\n              width: content.width,\n              heigt: content.height,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }\n            }));\n          }\n        }));\n      }\n    };\n\n    _this.parentRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(PreviewCanvas, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"canvas_container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"green\",\n        style: {\n          padding: \"1rem\",\n          fontSize: 24,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, \"Preview\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"preview_canvas\",\n        ref: this.parentRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, this.renderCanvas()));\n    }\n  }]);\n\n  return PreviewCanvas;\n}(Component);\n\nexport default PreviewCanvas;","map":{"version":3,"sources":["C:/Users/Tyler/Desktop/CSE 316/GoLogoLo/client/src/components/PreviewCanvas.js"],"names":["React","Component","Stage","Text","Rect","Layer","URLImage","PreviewCanvas","props","renderCanvas","selected","width","height","contents","map","content","index","console","log","layer","type","text","x","y","color","fontSize","fontFamily","src","parentRef","createRef","padding","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Stage, Text, Rect, Layer } from 'react-konva';\r\nimport URLImage from \"./URLImage\";\r\n\r\n\r\nclass PreviewCanvas extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.parentRef = React.createRef();\r\n    };\r\n\r\n\r\n\r\n    renderCanvas = () => {\r\n        if (this.props.selected) {\r\n            return (<Stage width={this.props.width} height={this.props.height} >\r\n                <Layer>\r\n                    <Rect width={this.props.width} height={this.props.height} fill={\"#e8eef2\"} />\r\n                </Layer>\r\n                {this.props.contents.map((content, index) => {\r\n                    console.log(content.layer + \" \" + index);\r\n                    if (content.type === \"text\") {\r\n                        return (<Layer key={index}><Text\r\n                            id={content.layer}\r\n                            name={content.type}\r\n                            text={content.text}\r\n                            x={content.x}\r\n                            y={content.y}\r\n                            fill={content.color}\r\n                            fontSize={content.fontSize}\r\n                            fontFamily={content.fontFamily}\r\n                        /></Layer>);\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Layer key={index}>\r\n                                {/* <Image\r\n                                    id={content.layer}\r\n                                    name={content.type}\r\n                                    text={content.text}\r\n                                    x={content.x}\r\n                                    y={content.y}\r\n                                    \r\n                                    width={content.width}\r\n                                    heigt={content.height}\r\n                                /> */}\r\n                                <URLImage src={content.src}\r\n                                    id={content.layer}\r\n                                    name={content.type}\r\n                                    text={content.text}\r\n                                    x={content.x}\r\n                                    y={content.y}\r\n                                    width={content.width}\r\n                                    heigt={content.height} />\r\n                            </Layer>\r\n                        );\r\n\r\n                    }\r\n\r\n\r\n                })}\r\n\r\n            </Stage>);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"canvas_container\">\r\n                <div className=\"green\" style={{\r\n                    padding: \"1rem\",\r\n                    fontSize: 24,\r\n                    textAlign: \"center\"\r\n                }\r\n                }>Preview</div>\r\n                <div id=\"preview_canvas\" ref={this.parentRef}>{this.renderCanvas()}</div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default PreviewCanvas;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}