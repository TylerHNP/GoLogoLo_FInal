{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\hw3\\\\client\\\\src\\\\components\\\\EditLogoScreen.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateLogo(\\n        $id: String!,\\n        $text: String!,\\n        $color: String!,\\n        $fontSize: Int!,\\n        $backgroundColor:String!,\\n        $borderColor:String!,\\n        $borderRadius:Int!,\\n        $borderWidth:Int!,\\n        $padding:Int!,\\n        $margin:Int!) {\\n            updateLogo(\\n                id: $id,\\n                text: $text,\\n                color: $color,\\n                fontSize: $fontSize,\\n                backgroundColor:$backgroundColor,\\n                borderColor:$borderColor,\\n                borderRadius:$borderRadius,\\n                borderWidth:$borderWidth,\\n                padding:$padding,\\n                margin:$margin) {\\n                    lastUpdate\\n                }\\n        }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query logo($logoId: String) {\\n        logo(id: $logoId) {\\n            _id\\n            text\\n            color\\n            fontSize\\n            backgroundColor\\n            borderColor\\n            borderRadius\\n            borderWidth\\n            padding\\n            margin\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\nvar GET_LOGO = gql(_templateObject());\nvar UPDATE_LOGO = gql(_templateObject2());\n\nvar EditLogoScreen = /*#__PURE__*/function (_Component) {\n  _inherits(EditLogoScreen, _Component);\n\n  function EditLogoScreen() {\n    var _this;\n\n    _classCallCheck(this, EditLogoScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditLogoScreen).call(this)); // WE'LL MANAGE THE UI CONTROL\n    // VALUES HERE\n\n    _this.handleTextChange = function (event) {\n      console.log(\"text change\");\n\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.state = {\n      setup: true,\n      text: \"\",\n      color: \"\",\n      fontSize: 0,\n      backgroundColor: \"\",\n      borderColor: \"\",\n      borderRadius: 0,\n      borderWidth: 0,\n      padding: 0,\n      margin: 0\n    };\n    return _this;\n  }\n\n  _createClass(EditLogoScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(window.input_style);\n      window.input_style = {};\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var text, color, fontSize, backgroundColor, borderColor, borderRadius, borderWidth, padding, margin;\n      window.input_style;\n\n      if (this.state.setup) {\n        return /*#__PURE__*/React.createElement(Query, {\n          query: GET_LOGO,\n          variables: {\n            logoId: this.props.match.params.id\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }\n        }, function (_ref) {\n          var loading = _ref.loading,\n              error = _ref.error,\n              data = _ref.data;\n          if (loading) return 'Loading...';\n          if (error) return \"Error! \".concat(error.message);\n          window.input_style = {\n            borderStyle: \"solid\",\n            color: data.logo.color,\n            fontSize: data.logo.fontSize + \"pt\",\n            backgroundColor: data.logo.backgroundColor,\n            borderColor: data.logo.borderColor,\n            borderRadius: data.logo.borderRadius + \"pt\",\n            borderWidth: data.logo.borderWidth + \"pt\",\n            padding: data.logo.padding + \"pt\",\n            margin: data.logo.margin + \"pt\"\n          };\n          return /*#__PURE__*/React.createElement(Mutation, {\n            mutation: UPDATE_LOGO,\n            key: data.logo._id,\n            onCompleted: function onCompleted() {\n              return _this2.props.history.push(\"/\");\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }\n          }, function (updateLogo, _ref2) {\n            var loading = _ref2.loading,\n                error = _ref2.error;\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"container\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"panel panel-default\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"panel-heading\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(\"h4\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 49\n              }\n            }, /*#__PURE__*/React.createElement(Link, {\n              to: \"/\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 53\n              }\n            }, \"Home\")), /*#__PURE__*/React.createElement(\"h3\", {\n              className: \"panel-title\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 49\n              }\n            }, \"Edit Logo\")), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"row\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"panel-body\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 49\n              }\n            }, /*#__PURE__*/React.createElement(\"form\", {\n              onSubmit: function onSubmit(e) {\n                e.preventDefault();\n                updateLogo({\n                  variables: {\n                    id: data.logo._id,\n                    text: text.value,\n                    color: color.value,\n                    fontSize: parseInt(fontSize.value),\n                    backgroundColor: backgroundColor.value,\n                    borderColor: borderColor.value,\n                    borderRadius: parseInt(borderRadius.value),\n                    borderWidth: parseInt(borderWidth.value),\n                    padding: parseInt(padding.value),\n                    margin: parseInt(margin.value)\n                  }\n                });\n                text.value = \"\";\n                color.value = \"\";\n                fontSize.value = \"\";\n                backgroundColor.value = \"\";\n                borderColor.value = \"\";\n                borderRadius.value = \"\";\n                borderWidth.value = \"\";\n                padding.value = \"\";\n                margin.value = \"\";\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 53\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-group\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 57\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"text\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 61\n              }\n            }, \"Text:\"), /*#__PURE__*/React.createElement(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"text\",\n              ref: function ref(node) {\n                text = node;\n              },\n              placeholder: \"Text\",\n              onChange: _this2.handleTextChange,\n              defaultValue: data.logo.text,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 61\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-group\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 57\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"color\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 61\n              }\n            }, \"Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n              type: \"color\",\n              className: \"form-control\",\n              name: \"color\",\n              ref: function ref(node) {\n                color = node;\n              },\n              placeholder: \"Color\",\n              defaultValue: data.logo.color,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 61\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-group\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 57\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"fontSize\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 61\n              }\n            }, \"Font Size:\"), /*#__PURE__*/React.createElement(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"fontSize\",\n              ref: function ref(node) {\n                fontSize = node;\n              },\n              placeholder: \"Font Size\",\n              defaultValue: data.logo.fontSize,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 61\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-group\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 57\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"backgroundColor\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 61\n              }\n            }, \"Background Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n              type: \"color\",\n              className: \"form-control\",\n              name: \"backgroundColor\",\n              ref: function ref(node) {\n                backgroundColor = node;\n              },\n              placeholder: \"Background Color\",\n              defaultValue: data.logo.backgroundColor,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 61\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-group\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 57\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"borderColor\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 61\n              }\n            }, \"Border Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n              type: \"color\",\n              className: \"form-control\",\n              name: \"borderColor\",\n              ref: function ref(node) {\n                borderColor = node;\n              },\n              placeholder: \"Border Color\",\n              defaultValue: data.logo.borderColor,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 61\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-group\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 57\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"borderRadius\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 61\n              }\n            }, \"Border Radius:\"), /*#__PURE__*/React.createElement(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"borderRadius\",\n              ref: function ref(node) {\n                borderRadius = node;\n              },\n              placeholder: \"Border Radius\",\n              defaultValue: data.logo.borderRadius,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 61\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-group\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 57\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"borderWidth\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 61\n              }\n            }, \"Border Width:\"), /*#__PURE__*/React.createElement(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"borderWidth\",\n              ref: function ref(node) {\n                borderWidth = node;\n              },\n              placeholder: \"Border Width\",\n              defaultValue: data.logo.borderWidth,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 61\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-group\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 57\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"padding\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 61\n              }\n            }, \"Padding:\"), /*#__PURE__*/React.createElement(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"padding\",\n              ref: function ref(node) {\n                padding = node;\n              },\n              placeholder: \"Padding\",\n              defaultValue: data.logo.padding,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 61\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-group\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 57\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"margin\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 61\n              }\n            }, \"Margin:\"), /*#__PURE__*/React.createElement(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"margin\",\n              ref: function ref(node) {\n                margin = node;\n              },\n              placeholder: \"Margin\",\n              defaultValue: data.logo.margin,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 61\n              }\n            })), /*#__PURE__*/React.createElement(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-success\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 57\n              }\n            }, \"Submit\")), loading && /*#__PURE__*/React.createElement(\"p\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 65\n              }\n            }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 63\n              }\n            }, \"Error :( Please try again\")), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"col s7\",\n              style: window.input_style,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 49\n              }\n            }, data.logo.text))));\n          });\n        });\n      }\n    }\n  }]);\n\n  return EditLogoScreen;\n}(Component);\n\nexport default EditLogoScreen;","map":{"version":3,"sources":["C:/Users/Tyler/Desktop/CSE 316/hw3/client/src/components/EditLogoScreen.js"],"names":["React","Component","Link","gql","Query","Mutation","GET_LOGO","UPDATE_LOGO","EditLogoScreen","handleTextChange","event","console","log","setState","text","target","value","state","setup","color","fontSize","backgroundColor","borderColor","borderRadius","borderWidth","padding","margin","window","input_style","logoId","props","match","params","id","loading","error","data","message","borderStyle","logo","_id","history","push","updateLogo","e","preventDefault","variables","parseInt","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\n\n\nconst GET_LOGO = gql`\n    query logo($logoId: String) {\n        logo(id: $logoId) {\n            _id\n            text\n            color\n            fontSize\n            backgroundColor\n            borderColor\n            borderRadius\n            borderWidth\n            padding\n            margin\n        }\n    }\n`;\n\nconst UPDATE_LOGO = gql`\n    mutation updateLogo(\n        $id: String!,\n        $text: String!,\n        $color: String!,\n        $fontSize: Int!,\n        $backgroundColor:String!,\n        $borderColor:String!,\n        $borderRadius:Int!,\n        $borderWidth:Int!,\n        $padding:Int!,\n        $margin:Int!) {\n            updateLogo(\n                id: $id,\n                text: $text,\n                color: $color,\n                fontSize: $fontSize,\n                backgroundColor:$backgroundColor,\n                borderColor:$borderColor,\n                borderRadius:$borderRadius,\n                borderWidth:$borderWidth,\n                padding:$padding,\n                margin:$margin) {\n                    lastUpdate\n                }\n        }\n`;\n\nclass EditLogoScreen extends Component {\n    constructor() {\n        super();\n\n        // WE'LL MANAGE THE UI CONTROL\n        // VALUES HERE\n        this.state = {\n            setup: true,\n            text: \"\",\n            color: \"\",\n            fontSize: 0,\n            backgroundColor: \"\",\n            borderColor: \"\",\n            borderRadius: 0,\n            borderWidth: 0,\n            padding: 0,\n            margin: 0\n        }\n\n    }\n    componentDidMount() {\n        console.log(window.input_style);\n        window.input_style = {};\n    }\n\n    handleTextChange = (event) => {\n        console.log(\"text change\");\n        this.setState({ text: event.target.value });\n    }\n    render() {\n        let text, color, fontSize, backgroundColor, borderColor, borderRadius, borderWidth, padding, margin;\n        window.input_style;\n        if (this.state.setup) {\n            return (\n                <Query query={GET_LOGO} variables={{ logoId: this.props.match.params.id }}>\n                    {({ loading, error, data }) => {\n                        if (loading) return 'Loading...';\n                        if (error) return `Error! ${error.message}`;\n                        window.input_style = {\n                            borderStyle: \"solid\",\n                            color: data.logo.color,\n                            fontSize: data.logo.fontSize + \"pt\",\n                            backgroundColor: data.logo.backgroundColor,\n                            borderColor: data.logo.borderColor,\n                            borderRadius: data.logo.borderRadius + \"pt\",\n                            borderWidth: data.logo.borderWidth + \"pt\",\n                            padding: data.logo.padding + \"pt\",\n                            margin: data.logo.margin + \"pt\"\n                        }\n                        return (\n                            <Mutation mutation={UPDATE_LOGO} key={data.logo._id} onCompleted={() => this.props.history.push(`/`)}>\n                                {(updateLogo, { loading, error }) => (\n                                    <div className=\"container\">\n                                        <div className=\"panel panel-default\">\n                                            <div className=\"panel-heading\">\n                                                <h4><Link to=\"/\">Home</Link></h4>\n                                                <h3 className=\"panel-title\">\n                                                    Edit Logo\n                                        </h3>\n                                            </div>\n                                            <div className=\"row\">\n\n                                                <div className=\"panel-body\">\n\n                                                    <form onSubmit={e => {\n                                                        e.preventDefault();\n                                                        updateLogo({\n                                                            variables: {\n                                                                id: data.logo._id, text: text.value, color: color.value, fontSize: parseInt(fontSize.value),\n                                                                backgroundColor: backgroundColor.value, borderColor: borderColor.value, borderRadius: parseInt(borderRadius.value),\n                                                                borderWidth: parseInt(borderWidth.value), padding: parseInt(padding.value), margin: parseInt(margin.value)\n                                                            }\n                                                        });\n                                                        text.value = \"\";\n                                                        color.value = \"\";\n                                                        fontSize.value = \"\";\n                                                        backgroundColor.value = \"\";\n                                                        borderColor.value = \"\";\n                                                        borderRadius.value = \"\";\n                                                        borderWidth.value = \"\";\n                                                        padding.value = \"\";\n                                                        margin.value = \"\";\n                                                    }}>\n                                                        <div className=\"form-group\">\n                                                            <label htmlFor=\"text\">Text:</label>\n                                                            <input type=\"text\" className=\"form-control\" name=\"text\" ref={node => {\n                                                                text = node;\n                                                            }} placeholder=\"Text\" onChange={this.handleTextChange} defaultValue={data.logo.text} />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label htmlFor=\"color\">Color:</label>\n                                                            <input type=\"color\" className=\"form-control\" name=\"color\" ref={node => {\n                                                                color = node;\n                                                            }} placeholder=\"Color\" defaultValue={data.logo.color} />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label htmlFor=\"fontSize\">Font Size:</label>\n                                                            <input type=\"text\" className=\"form-control\" name=\"fontSize\" ref={node => {\n                                                                fontSize = node;\n                                                            }} placeholder=\"Font Size\" defaultValue={data.logo.fontSize} />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label htmlFor=\"backgroundColor\">Background Color:</label>\n                                                            <input type=\"color\" className=\"form-control\" name=\"backgroundColor\" ref={node => {\n                                                                backgroundColor = node;\n                                                            }} placeholder=\"Background Color\" defaultValue={data.logo.backgroundColor} />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label htmlFor=\"borderColor\">Border Color:</label>\n                                                            <input type=\"color\" className=\"form-control\" name=\"borderColor\" ref={node => {\n                                                                borderColor = node;\n                                                            }} placeholder=\"Border Color\" defaultValue={data.logo.borderColor} />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label htmlFor=\"borderRadius\">Border Radius:</label>\n                                                            <input type=\"text\" className=\"form-control\" name=\"borderRadius\" ref={node => {\n                                                                borderRadius = node;\n                                                            }} placeholder=\"Border Radius\" defaultValue={data.logo.borderRadius} />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label htmlFor=\"borderWidth\">Border Width:</label>\n                                                            <input type=\"text\" className=\"form-control\" name=\"borderWidth\" ref={node => {\n                                                                borderWidth = node;\n                                                            }} placeholder=\"Border Width\" defaultValue={data.logo.borderWidth} />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label htmlFor=\"padding\">Padding:</label>\n                                                            <input type=\"text\" className=\"form-control\" name=\"padding\" ref={node => {\n                                                                padding = node;\n                                                            }} placeholder=\"Padding\" defaultValue={data.logo.padding} />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label htmlFor=\"margin\">Margin:</label>\n                                                            <input type=\"text\" className=\"form-control\" name=\"margin\" ref={node => {\n                                                                margin = node;\n                                                            }} placeholder=\"Margin\" defaultValue={data.logo.margin} />\n                                                        </div>\n\n                                                        <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                                                    </form>\n                                                    {loading && <p>Loading...</p>}\n                                                    {error && <p>Error :( Please try again</p>}\n                                                </div>\n                                                <div className=\"col s7\" style={window.input_style}>\n                                                    {data.logo.text}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                            </Mutation>\n                        );\n                    }}\n                </Query>\n            );\n        }\n    }\n}\n\nexport default EditLogoScreen;"]},"metadata":{},"sourceType":"module"}