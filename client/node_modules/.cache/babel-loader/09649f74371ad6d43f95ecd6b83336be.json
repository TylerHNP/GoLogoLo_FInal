{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tyler\\\\Desktop\\\\CSE 316\\\\GoLogoLo\\\\client\\\\src\\\\components\\\\WorkspaceCanvas.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Stage, Text, Rect, Layer } from 'react-konva';\nimport URLImage from \"./URLImage\";\n\nfunction WorkspaceCanvas(props) {\n  var _this = this;\n\n  var onDragEnd = function onDragEnd(e) {\n    // console.log(this.props.contents);\n    props.changePosition(e.target.id(), e.target.x(), e.target.y());\n  };\n\n  var onSelect = function onSelect(e) {\n    props.changeSelect(e.target);\n  };\n\n  var renderCanvas = function renderCanvas() {\n    if (props.contents) {\n      return /*#__PURE__*/React.createElement(Layer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Rect, {\n        width: props.width,\n        height: props.height,\n        fill: \"#e8eef2\",\n        onClick: props.deSelect,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }), _this.props.contents.map(function (content, index) {\n        var selectedSwitch = props.selected !== null && index === props.selected; //console.log(selectedSwitch);\n\n        if (content.__typename === \"text\") {\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            key: index,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Text, {\n            id: content.layer,\n            name: content.__typename,\n            text: content.text,\n            x: content.x,\n            y: content.y,\n            fill: content.color,\n            fontSize: content.fontSize,\n            fontFamily: content.fontFamily,\n            draggable: true,\n            onDragEnd: onDragEnd,\n            onDragStart: onSelect,\n            onClick: onSelect,\n            strokeWidth: content.fontSize / 20,\n            stroke: \"#a5ffd6\",\n            strokeEnabled: selectedSwitch,\n            align: \"center\",\n            verticalAlign: \"middle\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 37\n            }\n          }));\n        } else {\n          return /*#__PURE__*/React.createElement(URLImage, {\n            src: content.src,\n            key: index,\n            id: content.layer,\n            name: content.__typename,\n            text: content.text,\n            x: content.x,\n            y: content.y,\n            draggable: true,\n            width: content.width,\n            height: content.height,\n            onDragEnd: onDragEnd,\n            onDragStart: onSelect,\n            onClick: onSelect,\n            strokeWidth: content.width / 20,\n            stroke: \"#a5ffd6\",\n            strokeEnabled: selectedSwitch,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }\n          });\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(Stage, {\n      width: window.innerWidth * 0.6,\n      height: window.innerHeight * 0.65,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Layer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Rect, {\n      width: window.innerWidth * 0.6,\n      height: window.innerHeight * 0.65,\n      fill: \"#e8eef2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      text: \"Please add a text or import an image.\",\n      x: window.innerWidth * 0.6 / 2 - 250,\n      y: window.innerHeight * 0.65 / 2,\n      fill: \" #333333\",\n      fontSize: 24,\n      width: 500,\n      opacity: 1,\n      fontFamily: \"Lato\",\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"canvas_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"yellow\",\n    style: {\n      padding: \"1rem\",\n      fontSize: 24,\n      textAlign: \"center\" // fontStyle: \"italic\"\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, this.props.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"preview_canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stage, {\n    width: props.width,\n    height: props.height,\n    ref: props.stageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, renderCanvas())));\n}\n\nexport default WorkspaceCanvas;","map":{"version":3,"sources":["C:/Users/Tyler/Desktop/CSE 316/GoLogoLo/client/src/components/WorkspaceCanvas.js"],"names":["React","Component","Stage","Text","Rect","Layer","URLImage","WorkspaceCanvas","props","onDragEnd","e","changePosition","target","id","x","y","onSelect","changeSelect","renderCanvas","contents","width","height","deSelect","map","content","index","selectedSwitch","selected","__typename","layer","text","color","fontSize","fontFamily","src","window","innerWidth","innerHeight","padding","textAlign","name","stageRef"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Stage, Text, Rect, Layer } from 'react-konva';\r\nimport URLImage from \"./URLImage\";\r\n\r\n\r\nfunction WorkspaceCanvas(props) {\r\n    const onDragEnd = (e) => {\r\n        // console.log(this.props.contents);\r\n        props.changePosition(e.target.id(), e.target.x(), e.target.y());\r\n    };\r\n\r\n    const onSelect = (e) => {\r\n        props.changeSelect(e.target);\r\n    };\r\n\r\n    const renderCanvas = () => {\r\n        if (props.contents) {\r\n            return (\r\n                <Layer>\r\n                    <Rect width={props.width} height={props.height} fill={\"#e8eef2\"} onClick={props.deSelect} />\r\n                    {this.props.contents.map((content, index) => {\r\n                        var selectedSwitch = ((props.selected !== null) && (index === props.selected));\r\n                        //console.log(selectedSwitch);\r\n                        if (content.__typename === \"text\") {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <Text\r\n                                        id={content.layer}\r\n                                        name={content.__typename}\r\n                                        text={content.text}\r\n                                        x={content.x}\r\n                                        y={content.y}\r\n                                        fill={content.color}\r\n                                        fontSize={content.fontSize}\r\n                                        fontFamily={content.fontFamily}\r\n                                        draggable\r\n                                        onDragEnd={onDragEnd}\r\n                                        onDragStart={onSelect}\r\n                                        onClick={onSelect}\r\n                                        strokeWidth={content.fontSize / 20}\r\n                                        stroke={\"#a5ffd6\"}\r\n                                        strokeEnabled={selectedSwitch}\r\n                                        align={\"center\"}\r\n                                        verticalAlign={\"middle\"}\r\n                                    />\r\n\r\n                                </React.Fragment>\r\n                            );\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <URLImage src={content.src} key={index}\r\n                                    id={content.layer}\r\n                                    name={content.__typename}\r\n                                    text={content.text}\r\n                                    x={content.x}\r\n                                    y={content.y}\r\n                                    draggable={true}\r\n                                    width={content.width}\r\n                                    height={content.height}\r\n                                    onDragEnd={onDragEnd}\r\n                                    onDragStart={onSelect}\r\n                                    onClick={onSelect}\r\n                                    strokeWidth={content.width / 20}\r\n                                    stroke={\"#a5ffd6\"}\r\n                                    strokeEnabled={selectedSwitch}\r\n                                />\r\n\r\n                            );\r\n                        }\r\n                    })}\r\n                </Layer>);\r\n        }\r\n\r\n        return (<Stage width={window.innerWidth * 0.6} height={window.innerHeight * 0.65} >\r\n            <Layer>\r\n                <Rect width={window.innerWidth * 0.6} height={window.innerHeight * 0.65} fill={\"#e8eef2\"} />\r\n                <Text\r\n                    text={\"Please add a text or import an image.\"}\r\n                    x={window.innerWidth * 0.6 / 2 - 250}\r\n                    y={window.innerHeight * 0.65 / 2}\r\n                    fill={\" #333333\"}\r\n                    fontSize={24}\r\n                    width={500}\r\n                    opacity={1}\r\n                    fontFamily={\"Lato\"}\r\n                    align={\"center\"}\r\n                />\r\n            </Layer></Stage>);\r\n    };\r\n\r\n    return (\r\n        <div id=\"canvas_container\">\r\n            <div className=\"yellow\" style={{\r\n                padding: \"1rem\",\r\n                fontSize: 24,\r\n                textAlign: \"center\",\r\n                // fontStyle: \"italic\"\r\n            }\r\n            }>{this.props.name} </div>\r\n            <div id=\"preview_canvas\" >\r\n                <Stage width={props.width} height={props.height} ref={props.stageRef}>{renderCanvas()}</Stage>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default WorkspaceCanvas;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}